# ------------------------- Input/Output paths ------------------------------- #
# for the paths, please use full path to avoid issues
datadir: 'path to brainxcan data'
outdir: 'output directory'
prefix: 'output prefix'
brainxcan_path: 'path to brainxcan repo'


# ------------------------- GWAS formatting information ---------------------- #

gwas: 'path to GWAS file (format: csv(.gz), tsv(.gz), parquet'
snpid: 'column name of GWAS SNP RSID'
effect_allele: 'column name of GWAS effect allele'
non_effect_allele: 'column name of GWAS non-effect allele'
chr: 'column name of chromosome'
position: 'column name of position'  # required if using LD block permutation

# additional flags needed for variance control correction
pheno_h2: 'heritability of the GWAS trait' 
gwas_n: 'GWAS sample size'

# option 1 (high priority)
# Note: we assume effect is centered around zero, so use log(OR) for case control study
effect_size: 'column name of GWAS effect size'
effect_size_se: 'column name of GWAS effect size standard error'

# option 2
zscore: 'column name of GWAS z-score'
sample_size: 'column name of GWAS sample size'
allele_frequency: 'column name of allele frequency'


# ------------------------- Generating BrainXcan region ---------------------- #
# if want to generate interactive html to present the regions
bxcan_region_vis: True # or False 


# ------------------------- Optional: default values are listed -------------- #
# no need to specify if you'd like to go with default

# ancestry population of the gwas (used for MR). Options are populations in 1000G: AFR, AMR, EAS, EUR, SAS
gwas_pop: 'EUR'

# IDP prediction model type: ridge or elastic_net
model_type: 'ridge'

# IDP sets to use: original or residual (after PC adjustment)
idp_type: 'residual'

# CV Spearman cutoff on models (only models passing this criteria will be shown)
spearman_cutoff: 0.1 

# parameters to define signif BrainXcan results for MR - FDR cutoff will overwrite pval cutoff
fdr_cutoff: 0.05
signif_pval: 5e-2
signif_max_idps: 10

# parameters used in defining instrument in MR
ld_clump_yaml: '{datadir}/mr/ld_clump.yaml'

# path to R and Python     
rscript_exe: 'Rscript' 
python_exe: 'python'
plink_exe: 'plink'

# generate variance control corrected zscores
# set file for phi values at bxcan_vc_phi
bxcan_vc_z: False
bxcan_vc_phi: null 

# generate empirical zscores with simulated weights in BrainXcan
bxcan_empirical_z: False
bxcan_empirical_z_seed: 1
bxcan_empirical_z_nrepeat: 1000
correction_factor_emp: 1

# generate empirical zscores with LD block-based permutation in BrainXcan
## path to the BED file (TAB-delimited base0 with header chr, start, stop)
bxcan_ldblock_perm: null 
bxcan_ldblock_perm_seed: 1
bxcan_ldblock_perm_nrepeat: 10
correction_factor_perm: 1.1

# -------------------------- ABOUT DEPENDENT DATA --------------------------- #
# specify dependent data separately
# don't recommend changing typically
# only need when you want to use customized data in a nasty way 

# bxcan_idp_meta: ''
# bxcan_color_code: ''
# bxcan_vis_datadir: ''
# geno_cov_pattern: ''
# idp_weights_pattern: ''
# idp_gwas_pattern: ''
# idp_gwas_snp_pattern: ''
# idp_weights_cols: 
#   snpid: ''
#   effect_allele: ''
#   non_effect_allele: ''
#   chr: ''

